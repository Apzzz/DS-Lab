//prefix

#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<math.h>

char stack[50];
int t = -1;

void
push (char x)
{
  t++;
  stack[t] = x;
}

int
pop ()
{
  return stack[t--];
}

void
reverse (char *infix, char *reverse)
{
  for (int i = 0; i < strlen (infix); i++)
    push (infix[i]);
  for (int i = 0; i < strlen (infix); i++)
    reverse[i] = pop ();
}

int
priority (char a)
{
  if (a == '+' || a == '-')
    return 1;
  else if (a == '*' || a == '/')
    return 2;
  else if (a == '^')
    return 3;
  else
    return 0;
}

void
convert (char *rev, char *inter, char *prefix)
{
  char ch;
  int del, k = 0;
  for (int i = 0; i < strlen (rev); i++)
    {
      ch = rev[i];

      if (ch == ')')
	push (ch);
      else if (isalnum (ch))
	inter[k++] = ch;
      else if (ch == '(')
	{
	  while (stack[t] != ')')
	    inter[k++] = pop ();
	  del = pop ();
	}
      else
	{
	  while (priority (stack[t]) > priority (ch))
	    inter[k++] = pop ();
	  push (ch);
	}
    }
  while (t != -1)
    inter[k++] = pop ();
  inter[k] = '\0';
  reverse (inter, prefix);
  prefix[k] = '\0';
}

void
main ()
{
  char infix[50], prefix[50], rev[50], inter[50];
  printf ("Enter the infix expression ");
  gets (infix);
  reverse (infix, rev);
  rev[strlen (infix)] = '\0';
  convert (rev, inter, prefix);
  printf ("The prefix expression is %s \n", prefix);
}
